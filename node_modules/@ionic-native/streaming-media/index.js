var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var StreamingMediaOriginal = /** @class */ (function (_super) {
    __extends(StreamingMediaOriginal, _super);
    function StreamingMediaOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StreamingMediaOriginal.prototype.playVideo = function (videoUrl, options) { return cordova(this, "playVideo", { "sync": true }, arguments); };
    StreamingMediaOriginal.prototype.playAudio = function (audioUrl, options) { return cordova(this, "playAudio", { "sync": true }, arguments); };
    StreamingMediaOriginal.prototype.stopAudio = function () { return cordova(this, "stopAudio", { "sync": true }, arguments); };
    StreamingMediaOriginal.prototype.pauseAudio = function () { return cordova(this, "pauseAudio", { "sync": true, "platforms": ["iOS"] }, arguments); };
    StreamingMediaOriginal.prototype.resumeAudio = function () { return cordova(this, "resumeAudio", { "sync": true, "platforms": ["iOS"] }, arguments); };
    StreamingMediaOriginal.pluginName = "StreamingMedia";
    StreamingMediaOriginal.plugin = "cordova-plugin-streaming-media";
    StreamingMediaOriginal.pluginRef = "plugins.streamingMedia";
    StreamingMediaOriginal.repo = "https://github.com/nchutchind/cordova-plugin-streaming-media";
    StreamingMediaOriginal.platforms = ["Amazon Fire OS", "Android", "iOS"];
    return StreamingMediaOriginal;
}(IonicNativePlugin));
var StreamingMedia = new StreamingMediaOriginal();
export { StreamingMedia };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3N0cmVhbWluZy1tZWRpYS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFpRnBDLGtDQUFpQjs7OztJQU9uRCxrQ0FBUyxhQUFDLFFBQWdCLEVBQUUsT0FBK0I7SUFRM0Qsa0NBQVMsYUFBQyxRQUFnQixFQUFFLE9BQStCO0lBTTNELGtDQUFTO0lBTVQsbUNBQVU7SUFNVixvQ0FBVzs7Ozs7O3lCQW5IYjtFQWtGb0MsaUJBQWlCO1NBQXhDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBPYmplY3Qgb2Ygb3B0aW9ucyB0byBwYXNzIGludG8gdGhlIHBsYXlWaWRlbyBtZXRob2QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3RyZWFtaW5nVmlkZW9PcHRpb25zIHtcbiAgLyoqIEV4ZWN1dGVzIGFmdGVyIHN1Y2Nlc3MgcGxheWluZyBhdWRpby4gKi9cbiAgc3VjY2Vzc0NhbGxiYWNrPzogRnVuY3Rpb247XG4gIC8qKiBFeGVjdXRlcyBhZnRlciBlcnJvciBwbGF5aW5nIHZpZGVvLiAqL1xuICBlcnJvckNhbGxiYWNrPzogRnVuY3Rpb247XG4gIC8qKiBGb3JjZSBvbmUgb3JpZW50YXRpb24gZm9yIHBsYXlpbmcgdmlkZW8uICovXG4gIG9yaWVudGF0aW9uPzogc3RyaW5nO1xuICAvKiogU2hvdWxkIHRoZSB2aWRlbyBjbG9zZSBhZnRlciBpdCdzIG92ZXIuIERlZmF1bHRzIHRvIHRydWUuICovXG4gIHNob3VsZEF1dG9DbG9zZT86IGJvb2xlYW47XG4gIC8qKiBTaG91bGQgdGhlIHZpZGVvIGhhdmUgY29udHJvbHMuIERlZmF1bHRzIHRvIHRydWUuIEFuZHJvaWQgb25seS4gKi9cbiAgY29udHJvbHM/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIE9iamVjdCBvZiBvcHRpb25zIHRvIHBhc3MgaW50byB0aGUgcGxheUF1ZGlvIG1ldGhvZC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTdHJlYW1pbmdBdWRpb09wdGlvbnMge1xuICAvKiogQmFja2dyb3VuZCBjb2xvciBmb3IgYXVkaW8gcGxheWVyLiAqL1xuICBiZ0NvbG9yPzogc3RyaW5nO1xuICAvKiogQmFja2dyb3VuZCBpbWFnZSBmb3IgYXVkaW8gcGxheWVyLiAqL1xuICBiZ0ltYWdlPzogc3RyaW5nO1xuICAvKipcbiAgICogQmFja2dyb3VuZCBpbWFnZSBzY2FsZSBmb3IgYXVkaW8gcGxheWVyLlxuICAgKiBWYWxpZCB2YWx1ZXMgYXJlOlxuICAgKiBmaXRcbiAgICogc3RyZXRjaFxuICAgKiBhc3BlY3RTdHJldGNoLlxuICAgKi9cbiAgYmdJbWFnZVNjYWxlPzogc3RyaW5nO1xuICAvKiogU3RhcnQgYXVkaW8gcGxheWVyIGluIGZ1bGwgc2NyZWVuLiBpT1Mgb25seS4gKi9cbiAgaW5pdEZ1bGxzY3JlZW4/OiBib29sZWFuO1xuICAvKipcbiAgICogS2VlcHMgdGhlIHNjcmVlbiBsaXQgYW5kIHN0b3BzIGl0IGZyb20gbG9ja2luZ1xuICAgKiB3aGlsZSBhdWRpbyBpcyBwbGF5aW5nLiBBbmRyb2lkIG9ubHkuXG4gICAqL1xuICBrZWVwQXdha2U/OiBib29sZWFuO1xuICAvKiogRXhlY3V0ZXMgYWZ0ZXIgc3VjY2VzcyBwbGF5aW5nIGF1ZGlvLiAqL1xuICBzdWNjZXNzQ2FsbGJhY2s/OiBGdW5jdGlvbjtcbiAgLyoqIEV4ZWN1dGVzIGFmdGVyIGVycm9yIHBsYXlpbmcgYXVkaW8uICovXG4gIGVycm9yQ2FsbGJhY2s/OiBGdW5jdGlvbjtcbn1cblxuLyoqXG4gKiBAbmFtZSBTdHJlYW1pbmcgTWVkaWFcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gYWxsb3dzIHlvdSB0byBzdHJlYW0gYXVkaW8gYW5kIHZpZGVvIGluIGEgZnVsbHNjcmVlbiwgbmF0aXZlIHBsYXllciBvbiBpT1MgYW5kIEFuZHJvaWQuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTdHJlYW1pbmdNZWRpYSwgU3RyZWFtaW5nVmlkZW9PcHRpb25zIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zdHJlYW1pbmctbWVkaWEnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RyZWFtaW5nTWVkaWE6IFN0cmVhbWluZ01lZGlhKSB7IH1cbiAqXG4gKiBsZXQgb3B0aW9uczogU3RyZWFtaW5nVmlkZW9PcHRpb25zID0ge1xuICogICBzdWNjZXNzQ2FsbGJhY2s6ICgpID0+IHsgY29uc29sZS5sb2coJ1ZpZGVvIHBsYXllZCcpIH0sXG4gKiAgIGVycm9yQ2FsbGJhY2s6IChlKSA9PiB7IGNvbnNvbGUubG9nKCdFcnJvciBzdHJlYW1pbmcnKSB9LFxuICogICBvcmllbnRhdGlvbjogJ2xhbmRzY2FwZScsXG4gKiAgIHNob3VsZEF1dG9DbG9zZTogdHJ1ZSxcbiAqICAgY29udHJvbHM6IGZhbHNlXG4gKiB9O1xuICpcbiAqIHRoaXMuc3RyZWFtaW5nTWVkaWEucGxheVZpZGVvKCdodHRwczovL3BhdGgvdG8vdmlkZW8vc3RyZWFtJywgb3B0aW9ucyk7XG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogU3RyZWFtaW5nVmlkZW9PcHRpb25zXG4gKiBTdHJlYW1pbmdBdWRpb09wdGlvbnNcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTdHJlYW1pbmdNZWRpYScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXN0cmVhbWluZy1tZWRpYScsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuc3RyZWFtaW5nTWVkaWEnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL25jaHV0Y2hpbmQvY29yZG92YS1wbHVnaW4tc3RyZWFtaW5nLW1lZGlhJyxcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU3RyZWFtaW5nTWVkaWEgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBTdHJlYW1zIGEgdmlkZW9cbiAgICogQHBhcmFtIHZpZGVvVXJsIHtzdHJpbmd9IFRoZSBVUkwgb2YgdGhlIHZpZGVvXG4gICAqIEBwYXJhbSBvcHRpb25zIHtTdHJlYW1pbmdWaWRlb09wdGlvbnN9IE9wdGlvbnNcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBwbGF5VmlkZW8odmlkZW9Vcmw6IHN0cmluZywgb3B0aW9ucz86IFN0cmVhbWluZ1ZpZGVvT3B0aW9ucyk6IHZvaWQge31cblxuICAvKipcbiAgICogU3RyZWFtcyBhbiBhdWRpb1xuICAgKiBAcGFyYW0gYXVkaW9Vcmwge3N0cmluZ30gVGhlIFVSTCBvZiB0aGUgYXVkaW8gc3RyZWFtXG4gICAqIEBwYXJhbSBvcHRpb25zIHtTdHJlYW1pbmdBdWRpb09wdGlvbnN9IE9wdGlvbnNcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBwbGF5QXVkaW8oYXVkaW9Vcmw6IHN0cmluZywgb3B0aW9ucz86IFN0cmVhbWluZ0F1ZGlvT3B0aW9ucyk6IHZvaWQge31cblxuICAvKipcbiAgICogU3RvcHMgc3RyZWFtaW5nIGF1ZGlvXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgc3RvcEF1ZGlvKCk6IHZvaWQge31cblxuICAvKipcbiAgICogUGF1c2VzIHN0cmVhbWluZyBhdWRpb1xuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlLCBwbGF0Zm9ybXM6IFsnaU9TJ10gfSlcbiAgcGF1c2VBdWRpbygpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIFJlc3VtZXMgc3RyZWFtaW5nIGF1ZGlvXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUsIHBsYXRmb3JtczogWydpT1MnXSB9KVxuICByZXN1bWVBdWRpbygpOiB2b2lkIHt9XG59XG4iXX0=